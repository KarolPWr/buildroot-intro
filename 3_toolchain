# Toolchain

## Konfiguracja

    cd buildroot
    make menuconfig

Poruszamy się w menuconfigu.

    Toolchain -> Toolchain Type -> External 

Konfiguracja Toolchaina

    menu Toolchain

## crosstool-ng - full external

Ściąganie źródeł

    cd workspace/
    git clone https://github.com/crosstool-ng/crosstool-ng
    cd crosstool-ng/

Konfiguracja środowiska

    ./bootstrap
    ./configure --enable-local

Kompilacja

    make

Sprawdzenie konfiguracji

    ./ct-ng list-samples | grep -i rpi
    ./ct-ng show-aarch64-rpi4-linux-gnu

Wpisanie configa

    ./ct-ng aarch64-rpi4-linux-gnu

Zmiana ścieżki gdzie będzie zbudowany toolchain

    sed -i '/^CT_PREFIX_DIR=/s/.*/CT_PREFIX_DIR="${CT_PREFIX:-${PWD}\/x-tools}\/${CT_HOST:+HOST-${CT_HOST}\/}${CT_TARGET}"/' .config

Budowanie

    
    
Ustawienie external toolchaina w menu Buildroota

Select the Custom toolchain solution in the Toolchain list. You need to fill the Toolchain path, Toolchain prefix and External toolchain C library options. Then, you have to tell Buildroot what your external toolchain supports. If your external toolchain uses the glibc library, you only have to tell whether your toolchain supports C++ or not and whether it has built-in RPC support. If your external toolchain uses the uClibc library, then you have to tell Buildroot if it supports RPC, wide-char, locale, program invocation, threads and C++. At the beginning of the execution, Buildroot will tell you if the selected options do not match the toolchain configuration. 

    make menuconfig
    Toolchain list -> Custom toolchain
    Fill path, prefix and C lib options

## Zadanie

Zmienić wersję glibc, kernel headers (tak jak w pdf)

Przetestuj czy działa 



## Dokumentacja crosstool-ng
https://crosstool-ng.github.io/docs/

